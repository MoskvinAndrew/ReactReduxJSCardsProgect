{"version":3,"sources":["pages/test/testPage.module.css","SuperComponents/SuperCheckbox/ScheckBox.module.css","SuperComponents/SuperInput/SuperInput.tsx","SuperComponents/SuperButton/SuperButton.tsx","SuperComponents/SuperCheckbox/SCheckBox.tsx","pages/test/testPage.tsx","pages/registration/registration.tsx","pages/profile/profile.tsx","pages/password_recovery/passwordRecovery.tsx","pages/new_password/newPassword.tsx","pages/login/login.tsx","pages/404/404.tsx","App.tsx","reportWebVitals.ts","Redux/auth-Reducer.tsx","Redux/reduxStore.tsx","index.tsx","SuperComponents/SuperButton/SuperButton.module.css","SuperComponents/SuperInput/SuperInput.module.css"],"names":["module","exports","SuperInput","props","propsInputColor","styler","inputSelectorBlue","color","inputSelectorBlack","className","wrapper","group","type","required","onKeyPress","event","charCode","value","currentTarget","onEnterClick","bar","inputName","SuperButton","propsButtonSize","style","button_algolia","propsButtonColor","button_algoliaBlue","button_algoliaBlack","size","button_algoliaSmall","button_algoliaMid","onClick","buttonName","SCheckBox","propsInputSize","check","propsColor","checkBlue","checkBlack","checkBig","checkSmall","box","id","htmlFor","fontSize","boxName","TestPage","wraper","Registration","Profile","PasswordRecovery","NewPassword","Login","FourOFour","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","auth","state","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8a54b6da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"testPage_wraper__1vmva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ScheckBox_box__xbLWB\",\"check\":\"ScheckBox_check__3fhh2\",\"checkBlue\":\"ScheckBox_checkBlue__2Sb9_\",\"checkBlack\":\"ScheckBox_checkBlack__cI6ad\",\"checkBig\":\"ScheckBox_checkBig__1_LXD\",\"checkSmall\":\"ScheckBox_checkSmall__2jsEl\"};","import React from 'react';\r\nimport  styler from\"./SuperInput.module.css\"\r\n\r\n\r\ntype SuperInputTypes = {\r\n    inputName:string,\r\n    color?: 'green' | 'blue' | 'black',\r\n    onEnterClick:(value:string)=>void;\r\n}\r\n\r\nconst SuperInput: React.FC<SuperInputTypes> = (props:SuperInputTypes) => {\r\n    const onKeyPressHandler = (event: React.KeyboardEvent<HTMLInputElement>) =>{\r\n        if(event.charCode === 13){\r\n       let value = event.currentTarget.value;\r\n       props.onEnterClick(value)};\r\n\r\n\r\n    }\r\n\r\n    let propsInputColor = `${styler.inputSelectorBlue}`;            //определяет размер инпута\r\n    const propsInputColorFunction = () => {\r\n        if (props.color === 'blue') {\r\n            return propsInputColor = `${styler.inputSelectorBlue}`\r\n        } else if (props.color === 'black') {\r\n            return propsInputColor = `${styler.inputSelectorBlack}`\r\n        } else {\r\n            return propsInputColor = ''\r\n        }\r\n    };\r\n    propsInputColorFunction();\r\n    return(\r\n        <div className={styler.wrapper}>\r\n        <form>\r\n            <div className={styler.group}>\r\n                    <input type=\"text\" required className={propsInputColor} onKeyPress= {onKeyPressHandler} />\r\n                    <span className={styler.bar}></span>\r\n                    <label>{props.inputName}</label>\r\n            </div>\r\n        </form>\r\n</div>\r\n    )\r\n}\r\nexport default SuperInput;","import React from 'react';\r\nimport style from \"./SuperButton.module.css\";\r\n\r\ntype SuperButtonType = {\r\n    buttonName:string,\r\n    onClick:()=>void,\r\n    size?: 'small' | 'medium' | 'big',\r\n    color?: 'green' | 'blue' | 'black',\r\n}\r\n\r\n\r\nconst SuperButton: React.FC<SuperButtonType> = (props:SuperButtonType) => {\r\n\r\n    let propsButtonSize = `${style.button_algolia}`;\r\n    const propsButtonSizeFunction = () => {\r\n        if (props.size === 'small') {\r\n            return propsButtonSize = `${style.button_algolia} ${style.button_algoliaSmall}`\r\n        } else if (props.size === 'medium') {\r\n           return propsButtonSize = `${style.button_algolia} ${style.button_algoliaMid}`\r\n        } else {\r\n            return propsButtonSize = `${style.button_algolia}`\r\n        }\r\n    };\r\n\r\n    let propsButtonColor = `${style.button_algoliaBlue}`;\r\n    const propsButtonColorFunction = () => {\r\n        if (props.color === 'blue') {\r\n            return propsButtonColor = `${style.button_algolia} ${style.button_algoliaBlue}`\r\n        } else if (props.color === 'black') {\r\n            return propsButtonColor = `${style.button_algolia} ${style.button_algoliaBlack}`\r\n        } else {\r\n            return propsButtonColor = `${style.button_algolia}`\r\n        }\r\n    };\r\n    propsButtonColorFunction();\r\n    propsButtonSizeFunction();\r\n\r\n    const onClickHandler = () =>{\r\n        props.onClick();\r\n    }\r\n    return(\r\n        <div className={propsButtonSize +\" \"+ propsButtonColor} onClick={onClickHandler} >\r\n            {props.buttonName}\r\n        </div>\r\n    )\r\n}\r\nexport default SuperButton;\r\n\r\n","import React from 'react';\r\nimport style from \"./ScheckBox.module.css\";\r\n\r\ntype SCheckBoxType = {\r\n    boxName:string,\r\n    size?: 'small' | 'medium' | 'big',\r\n    color?: 'green' | 'blue' | 'black',\r\n\r\n}\r\n\r\n\r\nconst SCheckBox: React.FC<SCheckBoxType> = (props: SCheckBoxType) => {\r\n\r\n    const propsFontSize = () => {\r\n        if (props.size === 'small') {\r\n            return '10px'\r\n        } else if (props.size === 'big') {\r\n            return '26px'\r\n        } else {\r\n            return '20px'\r\n        }\r\n    };                 //определяет размер лейбла для чекбокса\r\n\r\n    let propsInputSize = `${style.check}`;             //определяет размер инпута\r\n    const propsInputSizeFunction = () => {\r\n        if (props.size === 'big') {\r\n            return propsInputSize = `${style.check} ${style.checkBig}`\r\n        } else if (props.size === 'small') {\r\n            return propsInputSize = `${style.check} ${style.checkSmall}`\r\n        } else {\r\n            return propsInputSize = `${style.check}`\r\n        }\r\n    }\r\n\r\n\r\n    let propsColor = `${style.check}`;                 //определяет цвет инпута\r\n    const propsColorFunction = () => {\r\n        if (props.color === \"blue\") {\r\n            return propsColor = `${style.check} ${style.checkBlue} ${style.checkBlue}`\r\n        } else if (props.color === \"black\") {\r\n            return propsColor = `${style.checkBlack} ${style.checkBlack} ${style.checkBlue}`\r\n        } else {\r\n            return propsColor = `${style.check}`\r\n        }\r\n    };\r\n\r\n    propsColorFunction();\r\n    propsInputSizeFunction();\r\n\r\n\r\n    return (\r\n        <div className={style.box}>\r\n            <input id=\"one\" type=\"checkbox\"/>\r\n            <span className={propsColor + \" \" + propsInputSize}></span>\r\n            <label htmlFor=\"one\" style={{fontSize: propsFontSize()}}>{props.boxName}</label>\r\n        </div>\r\n    )\r\n}\r\nexport default SCheckBox;\r\n\r\n","import React from 'react';\r\nimport style from \"./testPage.module.css\";\r\nimport SuperInput from \"../../SuperComponents/SuperInput/SuperInput\";\r\nimport SuperButton from \"../../SuperComponents/SuperButton/SuperButton\";\r\nimport SCheckBox from \"../../SuperComponents/SuperCheckbox/SCheckBox\";\r\n\r\n\r\nconst TestPage: React.FC=()=>{\r\n    return (\r\n        <div className={style.wraper}>\r\n        <SuperInput inputName={'SuperInput'} onEnterClick={()=>{}}/>\r\n        <SuperButton buttonName={'SuperButton'} onClick={()=>{}}/>\r\n        <SCheckBox boxName={'SuperCheckBox'}/>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default TestPage;","import React from 'react';\r\n\r\n\r\nconst Registration: React.FC = () =>{\r\n    return(\r\n        <div>\r\n            registration\r\n        </div>\r\n    )\r\n}\r\nexport default Registration;","import React from 'react';\r\n\r\n\r\nconst Profile: React.FC = () =>{\r\n    return(\r\n        <div>\r\n            profile\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\n\r\n\r\nconst PasswordRecovery: React.FC = () =>{\r\n    return(\r\n        <div>\r\n            PasswordRecovery\r\n        </div>\r\n    )\r\n}\r\nexport default PasswordRecovery;","import React from 'react';\r\n\r\n\r\nconst NewPassword: React.FC = () =>{\r\n    return(\r\n        <div>\r\n            NewPassword\r\n        </div>\r\n    )\r\n}\r\nexport default NewPassword;","import React from 'react';\r\n\r\n\r\nconst Login: React.FC = () =>{\r\n    return(\r\n        <div>\r\n            Login\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","import React from 'react';\r\nimport   \"./404.module.css\";\r\n\r\nconst FourOFour = () => {\r\n\r\n\r\n    return(\r\n<div><p>hello</p></div>\r\n)\r\n}\r\nexport default FourOFour;","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport TestPage from \"./pages/test/testPage\";\nimport Registration from \"./pages/registration/registration\";\nimport Profile from \"./pages/profile/profile\";\nimport PasswordRecovery from \"./pages/password_recovery/passwordRecovery\";\nimport NewPassword from \"./pages/new_password/newPassword\";\nimport Login from \"./pages/login/login\";\nimport FourOFour from \"./pages/404/404\";\n\nfunction App() {\n\n\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route exact path='/TestPage' render={() => <TestPage/>}/>\n                <Route exact path='/Registration' render={() => <Registration/>}/>\n                <Route exact path='/Profile' render={() => <Profile/>}/>\n                <Route exact path='/PasswordRecovery' render={() => <PasswordRecovery/>}/>\n                <Route exact path='/NewPassword' render={() => <NewPassword/>}/>\n                <Route exact path='/Login' render={() => <Login/>}/>\n                <Route exact path='/404' render={() => <FourOFour/>}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","export type authStateType = typeof initialState;\r\n\r\nconst initialState = {}\r\n\r\n// type ActionsType = {}\r\n\r\n// @ts-ignore\r\nexport const authReducer = (state: authStateType = initialState, action: ActionsType): authStateType => {\r\n    switch (action.type) {\r\n        case 'isAuth':\r\n            return state\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {authReducer} from \"./auth-Reducer\";\r\n\r\nexport type StoreReduxType = typeof store\r\nexport type RootState = ReturnType<typeof reducers>\r\n\r\n\r\nlet reducers = combineReducers({\r\n    auth:authReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/reduxStore\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n    <App />\n        </Provider>\n      </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_algolia\":\"SuperButton_button_algolia__2kGMy\",\"button_algoliaSmall\":\"SuperButton_button_algoliaSmall__333rY\",\"button_algoliaMid\":\"SuperButton_button_algoliaMid__q7uWC\",\"button_algoliaBlue\":\"SuperButton_button_algoliaBlue__1i1Lj\",\"button_algoliaBlack\":\"SuperButton_button_algoliaBlack__1HdKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SuperInput_wrapper__zWJjw\",\"group\":\"SuperInput_group__jIAx0\",\"bar\":\"SuperInput_bar__2ZqPO\",\"inputSelectorBlue\":\"SuperInput_inputSelectorBlue__3f84P\",\"inputSelectorBlack\":\"SuperInput_inputSelectorBlack__1qUwa\"};"],"sourceRoot":""}